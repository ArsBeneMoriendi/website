'use client';

import { useState, useEffect } from 'react';
import { Response, User } from '@/Interfaces';
import { axiosClient } from '@/utils';
import { getCookie, deleteCookie } from 'cookies-next';
import Link from 'next/link';
import Script from 'next/script';
import Image from 'next/image';
import Loader from '@/loader';

import o from '~/navigation.module.sass';

export default function Navigation() {
    const [pm, setPM] = useState<boolean>(true);

    const [loading, setLoading] = useState<boolean>(true);
    const [switcher, setSwitcher] = useState<boolean>(false);
    const [products, setProducts] = useState<boolean>(false);
    const [data, setData] = useState<Response<User>>();

    useEffect(() => {
        const getData = async () => {
            await axiosClient
                .get('/users/me', {
                    headers: {
                        'Content-Type': 'application/json',
                        Authorization: `Owner ${getCookie('napiAuthorizationToken')}`,
                    },
                })
                .then((res) => (res.data ? setData(res.data) : null, setLoading(false)))
                .catch((err) => (err.response?.data ? setData(err.response.data) : null, setLoading(false)));
        };

        getData();
    }, []);

    return (
        <>
            <Script id="border-nav" strategy="afterInteractive">
                {`const el = document.querySelector("#navBox");
                const observer = new IntersectionObserver(([e]) => (e.target.classList.toggle("is-pinned", e.intersectionRatio < 1), document.getElementById('navBoxImage').classList.toggle('is-pinned-image', e.intersectionRatio < 1)), { threshold: [1] });
                observer.observe(el);`}
            </Script>
            {switcher || products ? <div onClick={() => (setSwitcher((s) => false), setProducts((p) => false))} className="background"></div> : null}
            {pm ? <div className={o.colorBox}></div> : null}
            <nav className={o.box} id="navBox">
                <div className={o.container}>
                    <Link href="/">
                        <header>
                            <Image id="navBoxImage" src="/cdn/assets/watermark.png" width={22} height={22} alt="Logo grayscale" />
                            <h1>Nove</h1>
                        </header>
                    </Link>
                    <ul className={o.ul}>
                        <li>
                            <a className={products ? o.active : undefined} onClick={() => setProducts((p) => !p)}>
                                Products
                            </a>
                            {products ? (
                                <div className={o.products}>
                                    <a>
                                        <h1>
                                            <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="18" height="18" viewBox="0 0 50 50">
                                                <path
                                                    fill="currentColor"
                                                    d="M 29 8.53125 C 23.785156 8.53125 19.371094 11.652344 17.25 16.0625 C 16.121094 15.285156 14.8125 14.71875 13.34375 14.71875 C 9.617188 14.71875 6.644531 17.667969 6.4375 21.34375 C 2.710938 22.6875 0 26.164063 0 30.34375 C 0 35.671875 4.328125 40 9.65625 40 L 41.09375 40 C 46 40 50 36 50 31.09375 C 50 26.542969 46.507813 22.925781 42.09375 22.40625 C 42.109375 22.164063 42.15625 21.9375 42.15625 21.6875 C 42.15625 14.4375 36.25 8.53125 29 8.53125 Z M 29 10.53125 C 35.171875 10.53125 40.15625 15.519531 40.15625 21.6875 C 40.15625 22.144531 40.121094 22.59375 40.0625 23.0625 L 39.90625 24.1875 L 41.09375 24.1875 C 44.917969 24.1875 48 27.269531 48 31.09375 C 48 34.917969 44.917969 38 41.09375 38 L 9.65625 38 C 5.40625 38 2 34.589844 2 30.34375 C 2 26.808594 4.382813 23.832031 7.625 22.9375 L 8.375 22.75 L 8.34375 21.9375 C 8.339844 21.796875 8.34375 21.726563 8.34375 21.71875 C 8.34375 18.941406 10.566406 16.71875 13.34375 16.71875 C 14.734375 16.71875 16 17.277344 16.90625 18.1875 L 18 19.3125 L 18.53125 17.84375 C 20.105469 13.59375 24.191406 10.53125 29 10.53125 Z"></path>
                                            </svg>
                                            Cheems
                                        </h1>
                                        <p>Revolutionary file hosting focused on privacy</p>
                                    </a>
                                    <a>
                                        <h1>
                                            <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="18" height="18" viewBox="0 0 50 50">
                                                <path
                                                    fill="currentColor"
                                                    d="M 43.28125 2.28125 L 33.5625 12 L 31.3125 9.75 C 30.144531 8.582031 28.632813 8 27.09375 8 C 25.554688 8 24.011719 8.582031 22.84375 9.75 L 18.5 14.125 L 17.1875 12.8125 C 16.980469 12.589844 16.679688 12.476563 16.375 12.5 C 15.984375 12.539063 15.652344 12.800781 15.527344 13.167969 C 15.398438 13.539063 15.5 13.949219 15.78125 14.21875 L 35.78125 34.21875 C 36.023438 34.515625 36.410156 34.652344 36.785156 34.566406 C 37.15625 34.480469 37.449219 34.1875 37.535156 33.816406 C 37.621094 33.441406 37.484375 33.054688 37.1875 32.8125 L 35.875 31.5 L 40.125 27.28125 L 40.25 27.15625 C 42.585938 24.820313 42.585938 21.023438 40.25 18.6875 L 38 16.4375 L 47.71875 6.71875 L 46.28125 5.28125 L 36.5625 15 L 35 13.4375 L 44.71875 3.71875 Z M 27.0625 10 C 28.085938 10 29.121094 10.402344 29.90625 11.1875 L 38.8125 20.09375 C 40.382813 21.664063 40.382813 24.179688 38.8125 25.75 L 34.46875 30.09375 L 19.90625 15.53125 L 24.25 11.1875 C 25.035156 10.402344 26.039063 10 27.0625 10 Z M 13.3125 15.46875 C 12.9375 15.535156 12.636719 15.808594 12.53125 16.171875 C 12.425781 16.539063 12.535156 16.929688 12.8125 17.1875 L 14.125 18.5 L 9.75 22.84375 C 7.414063 25.179688 7.414063 28.976563 9.75 31.3125 L 12 33.5625 L 2.28125 43.28125 L 3.71875 44.71875 L 13.4375 35 L 15 36.5625 L 5.28125 46.28125 L 6.71875 47.71875 L 16.4375 38 L 18.6875 40.25 C 21.023438 42.585938 24.820313 42.585938 27.15625 40.25 L 31.5 35.875 L 32.8125 37.1875 C 33.054688 37.484375 33.441406 37.621094 33.816406 37.535156 C 34.1875 37.449219 34.480469 37.15625 34.566406 36.785156 C 34.652344 36.410156 34.515625 36.023438 34.21875 35.78125 L 14.21875 15.78125 C 14.03125 15.582031 13.773438 15.472656 13.5 15.46875 C 13.46875 15.46875 13.4375 15.46875 13.40625 15.46875 C 13.375 15.46875 13.34375 15.46875 13.3125 15.46875 Z M 15.53125 19.90625 L 30.09375 34.46875 L 25.75 38.8125 C 24.179688 40.382813 21.664063 40.382813 20.09375 38.8125 L 11.1875 29.90625 C 9.617188 28.335938 9.617188 25.820313 11.1875 24.25 Z"></path>
                                            </svg>
                                            NAPI
                                        </h1>
                                        <p>OAuth2 login handler for your applications</p>
                                    </a>
                                    <a>
                                        <h1>
                                            <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="18" height="18" viewBox="0 0 50 50">
                                                <path
                                                    fill="currentColor"
                                                    d="M 25 0 C 19.355469 0 14.230469 1.011719 10.4375 2.71875 C 8.542969 3.570313 6.980469 4.601563 5.84375 5.8125 C 4.707031 7.023438 4 8.457031 4 10 L 4 19.8125 C 3.992188 19.875 3.992188 19.9375 4 20 L 4 29.8125 C 3.992188 29.875 3.992188 29.9375 4 30 L 4 39 C 4 40.542969 4.707031 41.976563 5.84375 43.1875 C 6.980469 44.398438 8.542969 45.429688 10.4375 46.28125 C 14.230469 47.988281 19.355469 49 25 49 C 30.644531 49 35.769531 47.988281 39.5625 46.28125 C 41.457031 45.429688 43.019531 44.398438 44.15625 43.1875 C 45.292969 41.976563 46 40.542969 46 39 L 46 10 C 46 8.457031 45.292969 7.023438 44.15625 5.8125 C 43.019531 4.601563 41.457031 3.570313 39.5625 2.71875 C 35.769531 1.011719 30.644531 0 25 0 Z M 25 2 C 30.402344 2 35.273438 3.011719 38.71875 4.5625 C 40.441406 5.335938 41.800781 6.242188 42.6875 7.1875 C 43.574219 8.132813 44 9.058594 44 10 C 44 10.941406 43.574219 11.867188 42.6875 12.8125 C 41.800781 13.757813 40.441406 14.664063 38.71875 15.4375 C 35.273438 16.988281 30.402344 18 25 18 C 19.597656 18 14.726563 16.988281 11.28125 15.4375 C 9.558594 14.664063 8.199219 13.757813 7.3125 12.8125 C 6.425781 11.867188 6 10.941406 6 10 C 6 9.058594 6.425781 8.132813 7.3125 7.1875 C 8.199219 6.242188 9.558594 5.335938 11.28125 4.5625 C 14.726563 3.011719 19.597656 2 25 2 Z M 6 14.34375 C 7.121094 15.488281 8.621094 16.464844 10.4375 17.28125 C 14.230469 18.988281 19.355469 20 25 20 C 30.644531 20 35.769531 18.988281 39.5625 17.28125 C 41.378906 16.464844 42.878906 15.488281 44 14.34375 L 44 19.84375 C 44 19.875 44 19.90625 44 19.9375 L 44 20 C 44 20.941406 43.574219 21.867188 42.6875 22.8125 C 41.800781 23.757813 40.441406 24.664063 38.71875 25.4375 C 35.273438 26.988281 30.402344 28 25 28 C 19.597656 28 14.726563 26.988281 11.28125 25.4375 C 9.558594 24.664063 8.199219 23.757813 7.3125 22.8125 C 6.425781 21.867188 6 20.941406 6 20 C 6.007813 19.9375 6.007813 19.875 6 19.8125 Z M 6 24.34375 C 7.121094 25.488281 8.621094 26.464844 10.4375 27.28125 C 14.230469 28.988281 19.355469 30 25 30 C 30.644531 30 35.769531 28.988281 39.5625 27.28125 C 41.378906 26.464844 42.878906 25.488281 44 24.34375 L 44 29.84375 C 44 29.875 44 29.90625 44 29.9375 L 44 30 C 44 30.941406 43.574219 31.867188 42.6875 32.8125 C 41.800781 33.757813 40.441406 34.664063 38.71875 35.4375 C 35.273438 36.988281 30.402344 38 25 38 C 19.597656 38 14.726563 36.988281 11.28125 35.4375 C 9.558594 34.664063 8.199219 33.757813 7.3125 32.8125 C 6.425781 31.867188 6 30.941406 6 30 C 6.007813 29.9375 6.007813 29.875 6 29.8125 Z M 6 34.34375 C 7.121094 35.488281 8.621094 36.464844 10.4375 37.28125 C 14.230469 38.988281 19.355469 40 25 40 C 30.644531 40 35.769531 38.988281 39.5625 37.28125 C 41.378906 36.464844 42.878906 35.488281 44 34.34375 L 44 39 C 44 39.941406 43.574219 40.867188 42.6875 41.8125 C 41.800781 42.757813 40.441406 43.664063 38.71875 44.4375 C 35.273438 45.988281 30.402344 47 25 47 C 19.597656 47 14.726563 45.988281 11.28125 44.4375 C 9.558594 43.664063 8.199219 42.757813 7.3125 41.8125 C 6.425781 40.867188 6 39.941406 6 39 Z"></path>
                                            </svg>
                                            CRM
                                            <span>Business</span>
                                        </h1>
                                        <p>Organize and grow your business with ease</p>
                                    </a>
                                </div>
                            ) : null}
                        </li>
                        <li>
                            <Link href="/about">About</Link>
                        </li>
                        <li>
                            <Link href="/docs">Docs</Link>
                        </li>
                        <li>
                            <a href="https://github.com/nove-org/" target="_blank">
                                GitHub
                            </a>
                        </li>
                        <li>
                            <Link href="/open-source">Open source</Link>
                        </li>
                        <li>
                            <Link href="/privacy">Legal</Link>
                        </li>
                    </ul>
                    <ul>
                        {loading ? (
                            <Loader type="classic" />
                        ) : data?.body?.data ? (
                            <figure onClick={() => setSwitcher((s) => !s)}>
                                <Image src={`${data.body.data.avatar}?v=${data.body.data.updatedAt}`} width={24} height={24} alt="Account avatar" />
                                {switcher ? (
                                    <div className={o.switcher}>
                                        <header>
                                            <Image src={`${data.body.data.avatar}?v=${data.body.data.updatedAt}`} width={24} height={24} alt="Account avatar" />
                                            <h1>{data.body.data.username}</h1>
                                        </header>
                                        <ul>
                                            <li>
                                                <Link href="/account">
                                                    <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="16" height="16" viewBox="0 0 24 24">
                                                        <path
                                                            fill="currentColor"
                                                            d="M 12 3 A 4 4 0 0 0 8 7 A 4 4 0 0 0 12 11 A 4 4 0 0 0 16 7 A 4 4 0 0 0 12 3 z M 12 14 C 8.996 14 3 15.508 3 18.5 L 3 20 C 3 20.552 3.448 21 4 21 L 20 21 C 20.552 21 21 20.552 21 20 L 21 18.5 C 21 15.508 15.004 14 12 14 z"></path>
                                                    </svg>
                                                    Account
                                                </Link>
                                            </li>
                                            <li>
                                                <a onClick={() => (deleteCookie('napiAuthorizationToken'), window.location.reload())}>
                                                    <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="16" height="16" viewBox="0 0 24 24">
                                                        <path
                                                            fill="currentColor"
                                                            d="M19,3H5C3.895,3,3,3.895,3,5v14c0,1.105,0.895,2,2,2h14c1.105,0,2-0.895,2-2V5C21,3.895,20.105,3,19,3z M19.707,12.707 l-3.3,3.3C16.212,16.202,15.956,16.3,15.7,16.3s-0.512-0.098-0.707-0.293c-0.391-0.391-0.391-1.023,0-1.414L16.586,13H9 c-0.553,0-1-0.447-1-1s0.447-1,1-1h7.586l-1.593-1.593c-0.391-0.391-0.391-1.023,0-1.414s1.023-0.391,1.414,0l3.3,3.3 C20.098,11.684,20.098,12.316,19.707,12.707z"></path>
                                                    </svg>
                                                    Logout
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                ) : null}
                            </figure>
                        ) : (
                            <>
                                <li className={o.login}>
                                    <Link href="/login">Login</Link>
                                </li>
                                <li className={o.button}>
                                    <Link href="/sign-up">Sign up</Link>
                                </li>
                            </>
                        )}
                    </ul>
                </div>
            </nav>
        </>
    );
}
